name: FE Docker Hub Image

on: 
  push:
    branches: [ "main" ] 
  pull_request:
    branches: [ "main" ]
    
jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Generate Environment Variables File for Production
      run: |
         echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env
         echo "NEXT_PUBLIC_KAKAO_REDIRECT_URI=$NEXT_PUBLIC_KAKAO_REDIRECT_URI" >> .env
         echo "NEXT_PUBLIC_GOOGLE_REDIRECT_URI=$NEXT_PUBLIC_GOOGLE_REDIRECT_URI" >> .env
         echo "NEXT_PUBLIC_NAVER_REDIRECT_URI=$NEXT_PUBLIC_NAVER_REDIRECT_URI" >> .env
         echo "NEXT_PUBLIC_FORBIDDENWORDS=$NEXT_PUBLIC_FORBIDDENWORDS" >> .env
         echo "NEXT_PUBLIC_KAKAO_API_KEY=$NEXT_PUBLIC_KAKAO_API_KEY" >> .env
         echo "NEXT_PUBLIC_CLOUDFRONT_URL=$NEXT_PUBLIC_CLOUDFRONT_URL" >> .env
         echo "DOCKER_TAG=$DOCKER_TAG" >> .env
         echo "NEXT_PUBLIC_IMP_INIT=$NEXT_PUBLIC_IMP_INIT" >> .env
         echo "NEXT_PUBLIC_IMP_CHANNEL_KEY=$NEXT_PUBLIC_IMP_CHANNEL_KEY" >> .env
         echo "NEXT_PUBLIC_IMP_COMPANY=$NEXT_PUBLIC_IMP_COMPANY" >> .env
      env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_KAKAO_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_KAKAO_REDIRECT_URI }}
          NEXT_PUBLIC_GOOGLE_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_GOOGLE_REDIRECT_URI }}
          NEXT_PUBLIC_NAVER_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_NAVER_REDIRECT_URI }}
          NEXT_PUBLIC_FORBIDDENWORDS: ${{ secrets.NEXT_PUBLIC_FORBIDDENWORDS }}
          NEXT_PUBLIC_KAKAO_API_KEY: ${{ secrets.NEXT_PUBLIC_KAKAO_API_KEY }}
          NEXT_PUBLIC_CLOUDFRONT_URL: ${{ secrets.NEXT_PUBLIC_CLOUDFRONT_URL }}
          DOCKER_TAG: ${{ secrets.DOCKER_TAG }}
          NEXT_PUBLIC_IMP_INIT: ${{ secrets.NEXT_PUBLIC_IMP_INIT }}
          NEXT_PUBLIC_IMP_CHANNEL_KEY: ${{ secrets.NEXT_PUBLIC_IMP_CHANNEL_KEY }}
          NEXT_PUBLIC_IMP_COMPANY: ${{ secrets.NEXT_PUBLIC_IMP_COMPANY }}
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
         context: .
         file: DockerFile
         push: true
         tags: lkw9/ndp-fe:latest

    - name: Clean Up Docker Images and Cache
      run: |
        # Remove dangling Docker images and unused containers
        docker system prune -a -f
        # Clean apt cache to save disk space
        sudo apt clean

    - name: Deploy 1
      uses: appleboy/ssh-action@master
      env:
          APP: "preonb"
          COMPOSE: "/home/ubuntu/compose/docker-compose.yml"
      with:
        host: ${{ secrets.REMOTE_IP_1 }}
        username: ${{ secrets.REMOTE_SSH_ID_1 }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        port: ${{ secrets.REMOTE_SSH_PORT }}
        envs: APP, COMPOSE
        script_stop: true
        script: |
          sudo apt update && sudo apt-get install -y \
          ca-certificates \
          curl \
          gnupg \
          lsb-release \
          apt-transport-https \
          software-properties-common

          if [ -f /usr/share/keyrings/docker-archive-keyring.gpg ]; then
            sudo rm /usr/share/keyrings/docker-archive-keyring.gpg
          fi
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --no-tty --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

          echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

          sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          sudo usermod -aG docker ${{ secrets.REMOTE_SSH_ID_1 }}
          newgrp docker

          mkdir -p /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose
          cd /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose
          echo ${{ secrets.COMPOSE }} | base64 --decode > ./docker-compose.yml  
          echo ${{ secrets.NGINX_CONF}} | base64 --decode > ./nginx.conf 

          sudo docker-compose -f /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose/docker-compose.yml down --rmi all
          sudo docker-compose -f /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose/docker-compose.yml up -d

    - name: Deploy 2
      uses: appleboy/ssh-action@master
      env:
          APP: "preonb"
          COMPOSE: "/home/ubuntu/compose/docker-compose.yml"
      with:
        host: ${{ secrets.REMOTE_IP_2 }}
        username: ${{ secrets.REMOTE_SSH_ID_2 }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        port: ${{ secrets.REMOTE_SSH_PORT }}
        envs: APP, COMPOSE
        script_stop: true
        script: |
         sudo apt update && sudo apt-get install -y \
          ca-certificates \
          curl \
          gnupg \
          lsb-release \
          apt-transport-https \
          software-properties-common

          if [ -f /usr/share/keyrings/docker-archive-keyring.gpg ]; then
            sudo rm /usr/share/keyrings/docker-archive-keyring.gpg
          fi
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --no-tty --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

          echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

          sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          sudo usermod -aG docker ${{ secrets.REMOTE_SSH_ID_1 }}
          newgrp docker

          mkdir -p /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose
          cd /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose
          echo ${{ secrets.COMPOSE }} | base64 --decode > ./docker-compose.yml  
          echo ${{ secrets.NGINX_CONF}} | base64 --decode > ./nginx.conf 

          sudo docker-compose -f /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose/docker-compose.yml down --rmi all
          sudo docker-compose -f /home/${{ secrets.REMOTE_SSH_ID_1 }}/compose/docker-compose.yml up -d
